# GCP Cloud Build [ CI / CD ]
steps:
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   id: 'pre-build'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       echo ENV Values                                   \
  #       && echo ----------------------------------------- \
  #       && echo Build Location : $LOCATION                \
  #       && echo Build ID       : $BUILD_ID                \
  #       && echo Project ID     : $PROJECT_ID              \
  #       && echo TRIGGER_NAME   : $TRIGGER_NAME            \
  #       && echo COMMIT SHA     : $COMMIT_SHA              \
  #       && echo ----------------------------------------- \
  #       && echo _INSTANCE_NAME : $_INSTANCE_NAME          \
  #       && echo _INSTANCE_ZONE : $_INSTANCE_ZONE          \
  #       && echo _NODE_ENV      : $_NODE_ENV               \
  #       && echo _IMAGE_NAME    : $_IMAGE_NAME             \
  #       && echo _IMAGE_TAG     : $_IMAGE_TAG              \
  #       && echo _IMAGE_URL     : $_IMAGE_URL              \
  #       && echo ----------------------------------------- \

  - name: 'docker/compose:1.29.0'
    id: 'build-image'
    args:
      - -f
      - docker-compose.$_NODE_ENV.yaml
      - build

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_IMAGE_URL}'

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy'
    args: 
      - 'run'
      - 'deploy'
      - '${_INSTANCE_NAME}'
      - '--image=${_IMAGE_URL}'
      - '--region=${_INSTANCE_ZONE}'
      - '--platform=managed'

substitutions:
  _IMAGE_NAME: redis-standard-client
  _IMAGE_URL: 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}'
  _INSTANCE_NAME: _INSTANCE_NAME
  _INSTANCE_ZONE: _INSTANCE_ZONE
  _NODE_ENV: _NODE_ENV
  
options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

images:
  - 'gcr.io/$PROJECT_ID/redis-standard:$COMMIT_SHA'

