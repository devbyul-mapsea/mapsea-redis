steps:
  # Build ID & Trigger Name & Commit SHA 값을 확인 합니다.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-build-info'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo Get Build Info                               \
        && echo ----------------------------------------- \
        && echo Project ID     : $PROJECT_ID              \
        && echo Build Location : $LOCATION                \
        && echo Build ID       : $BUILD_ID                \
        && echo TRIGGER_NAME   : $TRIGGER_NAME            \
        && echo COMMIT_ID      : $COMMIT_SHA              \
        && echo SHORT_ID       : $SHORT_SHA               \
        && echo ----------------------------------------- \
        echo
        echo Get Cloud Build ENV                          \
        && echo _IMAGE_NAME       : $_IMAGE_NAME          \
        && echo _REGION           : $_REGION              \
        && echo _NODE_MODE        : $_NODE_MODE           \
        && echo _REPOSITORY_NAME  : $_REPOSITORY_NAME     \
        && echo _INSTANCE_NAME    : $_INSTANCE_NAME       \
        && echo _INSTANCE_ZONE    : $_INSTANCE_ZONE       \
        && echo _MACHINE_TYPE     : $_MACHINE_TYPE        \
        && echo -----------------------------------------

  # Docker 이미지를 빌드합니다.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-docker-file'
    args: [
      'build', '-t', '${_IMAGE_NAME}',
      '-f', './Dockerfile', '.',
      '--build-arg' ,'NODE_MODE=${_NODE_MODE}'
    ]

  # 빌드한 이미지를 Artifact Registry로 푸시합니다.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-docker-file-artifact-registry'
    args: [
      'push', '${_IMAGE_NAME}'
    ]
  
  # 최초 배포시에는 `new-depoly-computer-engine` 을 실행 시켜 새로운 VM 인스턴스를 생성합니다.
  # 인스턴스를 생성 한 이후에는 빌드배포 할 경우엔 `update-depoly-computer-engine` 을 실행시킵니다.
  # Compute Engine VM 인스턴스에 배포 [ VM Instance 생성 ]
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'new-depoly-computer-engine'
    args: [
      'compute', 'instances', 'create-with-container', '${_INSTANCE_NAME}',
      '--container-image', '${_IMAGE_NAME}',
      '--zone', '${_INSTANCE_ZONE}',
      '--machine-type', '${_MACHINE_TYPE}'
    ]
  
  # Compute Engine VM 인스턴스에 배포 [ VM Instance 수정 ]
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   id: 'update-depoly-computer-engine'
  #   args: [
  #     'compute', 'instances', 'update-container', '${_INSTANCE_NAME}',
  #     '--container-image', '${_IMAGE_NAME}',
  #     '--zone', '${_INSTANCE_ZONE}',
  #   ]

substitutions:
  _IMAGE_NAME: ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_NODE_MODE}-${BUILD_ID} 
  _REGION: _REGION
  _NODE_MODE: _NODE_MODE
  _REPOSITORY_NAME: _REPOSITORY_NAME
  _INSTANCE_NAME: _INSTANCE_NAME
  _INSTANCE_ZONE: _INSTANCE_ZONE
  _MACHINE_TYPE: _MACHINE_TYPE

options:
  dynamic_substitutions: true
