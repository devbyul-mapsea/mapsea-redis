openapi: 3.0.3
info:
  title: Mapsea Proxy Server With OpenApi
  description: |-
    # Mapsea Proxy Server With OpenApi
    **Endpoint:**  /api/</br>
    **Swagger:**  /api-docs</br>
    **Platform:** Node.Js<br>
    **FrameWork:** Express<br>
    **DevLanguage:** typescript<br>
    **Developer:** 최민석(devbyul-mapsea)

    <h2>Descritpion</h2> API Key 를 서버에서 관리하기 위해 작성한 OpenApi Reverse Porxy 서버입니다.<br>
    
    <h2>OpenApi 리스트</h2>
    - [국세청_사업자등록정보 진위확인 및 상태조회 서비스](https://www.data.go.kr/data/15081808/openapi.do#/%EC%82%AC%EC%97%85%EC%9E%90%EB%93%B1%EB%A1%9D%EC%A0%95%EB%B3%B4%20%EC%A7%84%EC%9C%84%ED%99%95%EC%9D%B8%20API/validate)
    
    <h2>추가 작업 필요 사항</h2>
    - 서버 접근에 대한 WhiteList 작성
    - 공공데이터 포탈 API KEY 회사 계정으로 추후 변경 필요
  contact:
    email: devbyul@mapseacorp.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

servers:
  - url: http://127.0.0.1:4000

tags:
  - name: status
    description: Server Status 확인용 API 입니다.
  - name: 사업자등록번호
    description: 사업자등록번호 관련된 오픈API 리스트

paths:
  $ref: './path.yaml'

security:
  - authorization: []

components:
  securitySchemes:
    authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    사업자등록_상태조회_API_Request:
      type: object
      required:
        - b_no
      properties:
        b_no:
          type: array
          description: 사업자등록번호
          items:
            default: "0000000000"
    사업자등록_상태조회_API_Response:
      type: object
      properties:
        success:
          type: boolean
          default: true
          description: API 호출 상태 여부
        data:
          type: array
          items:
            $ref: "#/components/schemas/국세청_사업자등록_상태조회_API_Response"
          description: 국세청 사업자등록 상태조회 결과
        respone:
          type: string
          default: "2023-08-03T07:02:25.174Z"
          description: API Response 시간
    국세청_사업자등록_상태조회_API_Response:
      properties:
        status_code:
          type: enum
          enum:
            - OK
          description: API 상태 코드
        request_cnt:
          type: number
          description: 조회 요청 수
        match_cnt:
          type: number
          description: 조회 매칭 수
        result:
          type: array
          items:
            $ref: "#/components/schemas/국세청_사업자등록_상태조회_결과"
    국세청_사업자등록_상태조회_결과:
      properties:
        b_no:
          type: string
          default: "0000000000"
          description: 사업자등록번호
        b_stt:
          type: string
          default: "계속사업자"
          description: |
            <h3>납세자상태(명칭)</h3>
            01: 계속사업자<br>
            02: 휴업자<br>
            03: 폐업자
        b_stt_cd:
          type: string
          default: "01"
          description: |
            <h3>납세자상태(코드)</h3>
            01: 계속사업자<br>
            02: 휴업자<br>
            03: 폐업자
        tax_type:
          type: string
          default: "부가가치세 일반과세자"
          description: |
            <h3>과세유형메세지(명칭)</h3>
            01:부가가치세 일반과세자<br>
            02:부가가치세 간이과세자<br>
            03:부가가치세 과세특례자<br>
            04:부가가치세 면세사업자<br>
            05:수익사업을 영위하지 않는 비영리법인이거나 고유번호가 부여된 단체,국가기관 등<br>
            06:고유번호가 부여된 단체<br>
            07:부가가치세 간이과세자(세금계산서 발급사업자)<br>
            **등록되지 않았거나 삭제된 경우**: "국세청에 등록되지 않은 사업자등록번호입니다"
        tax_type_cd:
          type: string
          default: "01"
          description: |
            <h3>과세유형메세지(코드)</h3>
            01:부가가치세 일반과세자<br>
            02:부가가치세 간이과세자<br>
            03:부가가치세 과세특례자<br>
            04:부가가치세 면세사업자<br>
            05:수익사업을 영위하지 않는 비영리법인이거나 고유번호가 부여된 단체,국가기관 등<br>
            06:고유번호가 부여된 단체<br>
            07:부가가치세 간이과세자(세금계산서 발급사업자)<br>
        end_dt:
          type: string
          default: "20000101"
          description: 폐업일 (**YYYYMMDD** 포맷)
        utcc_yn:
          type: string
          default: "Y"
          description: 단위과세전환폐업여부 (**Y,N**)
        tax_type_change_dt:
          type: string
          default: "20000101"
          description: 최근과세유형전환일자 (**YYYYMMDD** 포맷)
        invoice_apply_dt:
          type: string
          default: "20000101"
          description: 세금계산서적용일자 (**YYYYMMDD** 포맷)
        rbf_tax_type:
          type: string
          default: "부가가치세 일반과세자"
          description: |
            <h3>직전과세유형메세지(명칭)</h3>
            01:부가가치세 일반과세자<br>
            02:부가가치세 간이과세자<br>
            07:부가가치세 간이과세자(세금계산서 발급사업자)<br>
            99:해당없음
        rbf_tax_type_cd:
          type: string
          default: "01"    
          description: |
            <h3>직전과세유형메세지(명칭)</h3>
            01:부가가치세 일반과세자<br>
            02:부가가치세 간이과세자<br>
            07:부가가치세 간이과세자(세금계산서 발급사업자)<br>
            99:해당없음
    사업자등록정보_진위확인_API_Request:
      type: object
      properties:
        biz: 
          type: array
          items:
            $ref: "#/components/schemas/국세청_사업자등록번호_진위확인_Request_Body"
    국세청_사업자등록번호_진위확인_Request_Body:
      required:
        - b_no
        - start_dt
        - p_nm
      type: object
      properties:
        b_no:
          type: string
          default: "0000000000"
          description: 사업자등록번호
        start_dt:
          type: string
          default: "20000101"
          description: 개업일자 (YYYYMMDD 포맷)
        p_nm:
          type: string
          default: "홍길동"
          description: 대표자성명_1
        p_nm2:
          type: string
          default: "홍길동"
          description: 대표자성명_2 - 대표자성명1 이 한글이 아닌 경우, 이에 대한 한글명
        b_nm:
          type: string
          default: "(주)테스트"
          description: 상호 (*Optional*)
        corp_no:
          type: string
          default: "0000000000000"
          description: 법인등록번호 (*Optional*)
        b_sector:
          type: string
          default: ""
          description: 주업태명 (*Optional*)
        b_type:
          type: string
          default: ""
          description: 주종목명 (*Optional*)
        b_adr:
          type: string
          default: ""
          description: 사업장주소 (*Optional*)
    사업자등록정보_진위확인_API_Response:
      properties:
        status_code:
          type: enum
          enum:
            - OK
          description: API 상태 코드
        request_cnt:
          type: number
          description: 조회 요청 수
        valid_cnt:
          type: number
          description: 검사 Valid 수
        result:
          $ref: "#/components/schemas/국세청_사업자등록정보_진위확인_결과"
    국세청_사업자등록정보_진위확인_결과:
      required:
        - b_no
        - valid
        - request_param
      properties:
        b_no:
          type: string
          default: "0000000000"
          description: 사업자등록번호
        valid:
          type: enum
          enum:
            - 01
            - 02
          description: |
            <h3>진위확인 결과 코드</h3>
            01: Valid<br>
            02: Invalid
        valid_msg:
          type: string
          description: |
            <h3>진위확인 결과 메세지</h3>
            * valid 값이 02인 경우: 확인할 수 없습니다.
            * 그외 : valid_msg 프로퍼티가 return 되지 않습니다.
        request_param:
          $ref: "#/components/schemas/국세청_사업자등록번호_진위확인_Request_Body"
        status:
          $ref: "#/components/schemas/국세청_사업자등록_상태조회_결과"
    # 국세청 API ERROR MESSAGE
    BadJsonRequestError:
      description: Invalid JSON format in request.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: BAD_JSON_REQUEST
              statusCode:
                type: number
                example: 400
              message:
                type: string
                example: JSON 포맷에 적합하지 않는 요청
    # 국세청 API ERROR MESSAGE
    RequestDataMalformedError:
      description: Missing required request parameter.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: REQUEST_DATA_MALFORMED
              statusCode:
                type: number
                example: 411
              message:
                type: string
                example: 필수 요청 파라미터 누락
    # 국세청 API ERROR MESSAGE
    TooLargeRequestError:
      description: Request exceeds the limit of 100 business numbers.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: TOO_LARGE_REQUEST
              statusCode:
                type: number
                example: 413
              message:
                type: string
                example: 요청 사업자번호 100개 초과
    
    # 권한 문제 발생한 경우 
    AuthForbidden:
      description: Access to this resource is forbidden.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: AUTH_FORBIDDEN
              statusCode:
                type: number
                example: 403
              message:
                type: string
                example: You do not have permission to access that path.
    # 데이터 유효성 에러가 발생한 경우
    ValidationError:
      description: Validation fail.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: AUTH_FORBIDDEN
              statusCode:
                type: number
                example: 422
              message:
                type: string
                example: Validation fail, entered data is incorrect.
              Validation:
                type: object
                properties:
                  b_no[0]:
                    type: object
                    properties:
                      location:
                        type: string
                        default: "body"
                      value:
                        type: string
                        default: "12345678901"
                      msg:
                        type: string
                        default: "Invalid value"

    # 서버 자체측에서 문제가 발생한 경우
    InternalError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: INTERNAL_ERROR
              statusCode:
                type: number
                example: 500
              message:
                type: string
                example: Internal Server Error